buildscript {
    apply from: "config.gradle"
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath libraries.androidGradlePlugin
    }
}

plugins {
    id "org.mozilla.rust-android-gradle.rust-android" version "0.9.6"
}

apply from: "config.gradle"
apply plugin: 'com.android.application'
apply plugin: 'org.mozilla.rust-android-gradle.rust-android'

android {
    namespace getExportPackageName()
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools
    ndkVersion versions.ndkVersion

    defaultConfig {
        applicationId getExportPackageName()
        versionCode getExportVersionCode()
        versionName getExportVersionName()
        minSdkVersion getExportMinSdkVersion()
        targetSdkVersion getExportTargetSdkVersion()
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            manifest.srcFile "AndroidManifest.xml"
            java.srcDirs = ["src"]
            assets.srcDirs = ["../../assets"]
            res.srcDirs = ["../../res_android"]
        }
    }
}

cargo {
    module = "../"
    libname = "rust_lib"
    targets = [
        // "arm",
        "arm64",
        // "x86",
        // "x86_64"
    ]
    targetDirectory = "../target"
    if (project.gradle.startParameter.taskNames.any { it.toLowerCase().contains('release') }) {
        profile = "release"
    } else {
        profile = "debug"
    }
}

repositories {
    google()
    mavenCentral()
}

dependencies {
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
}

tasks.whenTaskAdded { task ->
    if (task.name == 'mergeDebugJniLibFolders' || task.name == 'mergeReleaseJniLibFolders') {
        task.dependsOn 'cargoBuild'
    }
}
